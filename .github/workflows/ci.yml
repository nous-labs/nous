name: CI

on:
  push:
    branches:
      - main
      - beta
      - alpha
  pull_request:
    branches:
      - main
      - beta

jobs:
  test:
    name: Test on ${{ matrix.os }} with Bun ${{ matrix.bun-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        bun-version: ['1.0.0', 'latest']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type check
        run: bun run typecheck

      - name: Run tests
        run: bun test

      - name: Run tests with coverage
        if: matrix.os == 'ubuntu-latest' && matrix.bun-version == 'latest'
        run: bun test --coverage

  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run TypeScript type check
        run: bun run typecheck

      - name: Lint
        run: bun run lint

  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: bun run build

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi

  node-compatibility:
    name: Test Node.js Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '21.x']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run type check
        run: npm run typecheck

  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [test, lint, build, node-compatibility]
    if: always()

    steps:
      - name: Check if all jobs passed
        run: |
          if [[ "${{ needs.test.result }}" != "success" || \
                "${{ needs.lint.result }}" != "success" || \
                "${{ needs.build.result }}" != "success" || \
                "${{ needs.node-compatibility.result }}" != "success" ]]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All checks passed!"
